#!/usr/bin/env python3

import json
import pandas as pd 
import numpy as np
from collections import defaultdict

def main():
    """This is a test program to give a 'proof-of-concept' for how to mine data from CIA factbook jsons."""

    with open("Miniprojekti/weekly_json/2020-05-04_factbook.json", "r", encoding='utf8', errors='ignore') as f:  
        factbook = json.load(f)["countries"]    # This creates a nested dictionary with all the data in a single .json

    countries = list(factbook.keys())   # a list of all entries in the factbook
    data_list = []                      # a placeholder list for the information we are interested in 
    missing_data = defaultdict(list)    # a dictionary for missing information as keys and list of countries as values

    for x in factbook:              
        try:
            data_list.append(factbook[x]["data"]["people"]["birth_rate"]["births_per_1000_population"]) # Add birth rate into data_list 
        except KeyError as missing:
            missing_data[missing.args[0]].append(x) # Add the country into appropriate slot of missing info. 
            data_list.append(np.nan)                # Add a NaN value into data_list
    
    data = pd.DataFrame(data_list, columns=["Birth rate (births per 1000 population)"], index=countries) 

    print("\nThe DataFrame looks like this:\n\n", data) 
    for x in missing_data:
        print("\nData", x, "missing for:\n", missing_data[x])
    
if __name__ == "__main__":
    main()
